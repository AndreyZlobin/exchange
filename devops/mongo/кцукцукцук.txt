FROM mongo:4

#ENV MONGO_INITDB_ROOT_USERNAME=root \
#    MONGO_INITDB_ROOT_PASSWORD=example

#EXPOSE 27017

RUN mkdir -p /data/db /data/configdb

# Копирование настроек MongoDB
COPY mongod.conf /etc/mongod.conf

RUN echo "rs.initiate({'_id':'rs0', members: [{'_id':1, 'host':'127.0.0.1:27017'}]});" > "/docker-entrypoint-initdb.d/init_replicaset.js"
RUN echo "12345678" > "/tmp/key.file"
RUN chmod 600 /tmp/key.file
RUN chown 999:999 /tmp/key.file

CMD ["mongod", "--replSet", "rs0", "--bind_ip_all", "--keyFile", "/tmp/key.file"]

# Скрипт для запуска репликации
#COPY rs-initiate.js /rs-initiate.js

#COPY mongo-init.js /docker-entrypoint-initdb.d/

#RUN chown -R mongodb:mongodb /docker-entrypoint-initdb.d/mongo-init.js

# we take over the default & start mongo in replica set mode in a background task
ENTRYPOINT mongod --port $MONGO_REPLICA_PORT --replSet rs0 --bind_ip 0.0.0.0 & MONGOD_PID=$!; \
# we prepare the replica set with a single node and prepare the root user config
INIT_REPL_CMD="rs.initiate({ _id: 'rs0', members: [{ _id: 0, host: '$MONGO_REPLICA_HOST:$MONGO_REPLICA_PORT' }, { _id: 1, host: '$MONGO_REPLICA_HOST2:$MONGO_REPLICA_PORT2' }] })"; \
INIT_USER_CMD="db.createUser({ user: '$MONGO_INITDB_ROOT_USERNAME', pwd: '$MONGO_INITDB_ROOT_PASSWORD', roles: [ 'root' ] })"; \
INIT_USER_CMD="db.getSiblingDB('$MONGO_INITDB_DATABASE')"; \
# we wait for the replica set to be ready and then submit the commands just above
until (mongo admin --port $MONGO_REPLICA_PORT --eval "$INIT_REPL_CMD && $INIT_USER_CMD"); do sleep 1; done; \
# we are done but we keep the container by waiting on signals from the mongo task
echo "REPLICA SET ONLINE"; wait $MONGOD_PID;

#CMD ["mongod", "--auth", "--config", "/etc/mongod.conf"]
